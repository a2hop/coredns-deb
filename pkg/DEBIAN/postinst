

#!/bin/bash
set -e

echo "================================"
echo "CoreDNS Post-Installation Setup"
echo "================================"

# Determine if this is an upgrade or fresh install
# $1 = configure, $2 = version of old package (if upgrade)
IS_UPGRADE=false
OLD_VERSION=""
if [ "$1" = "configure" ] && [ -n "$2" ]; then
    IS_UPGRADE=true
    OLD_VERSION="$2"
    echo "Upgrading CoreDNS from version $OLD_VERSION"
fi

# Check if service is currently running (before upgrade)
SERVICE_WAS_RUNNING=false
if systemctl is-active --quiet coredns 2>/dev/null; then
    SERVICE_WAS_RUNNING=true
    echo "✓ CoreDNS service is currently running"
fi

# Create coredns system user if it doesn't exist
if ! id coredns &>/dev/null; then
    echo "Creating coredns system user..."
    useradd -r -s /usr/sbin/nologin coredns || true
else
    echo "coredns user already exists"
fi

# Set proper permissions on binary
if [ -f /usr/local/bin/coredns ]; then
    chmod 755 /usr/local/bin/coredns
    chown root:root /usr/local/bin/coredns
    echo "✓ Binary permissions set"
fi

# Create and configure coredns directory
mkdir -p /etc/coredns
mkdir -p /etc/coredns/zone
chown coredns:coredns /etc/coredns
chown coredns:coredns /etc/coredns/zone
chmod 755 /etc/coredns
chmod 755 /etc/coredns/zone
echo "✓ Configuration directory ready"

# Create default Corefile ONLY on fresh install (not on upgrade)
# $IS_UPGRADE will be true if this is an upgrade
if [ "$IS_UPGRADE" = false ] && [ ! -f /etc/coredns/Corefile ]; then
    cat > /etc/coredns/Corefile << 'EOF'
# Default CoreDNS configuration
# For DNS proxy setup, see /etc/coredns/proxy_only.example
# For local zone setup, see /etc/coredns/proxy_zone.example
# For local zone with fallback, see /etc/coredns/proxy_zone_with_fallback.example
# For conditional forwarding, see /etc/coredns/proxy_zone_conditional.example

# Simple proxy configuration (uncomment to use)
# . {
#     forward . 8.8.8.8 8.8.4.4
#     cache 30
#     log
#     errors
# }
EOF
    chown coredns:coredns /etc/coredns/Corefile
    chmod 644 /etc/coredns/Corefile
    echo "✓ Default Corefile created"
fi

# Install systemd service
if [ -f /etc/systemd/system/coredns.service ]; then
    systemctl daemon-reload
    echo "✓ Systemd service installed"
fi

# Handle upgrade: restart only if service was running
if [ "$IS_UPGRADE" = true ]; then
    echo ""
    echo "================================"
    echo "Upgrade Complete!"
    echo "================================"
    
    if [ "$SERVICE_WAS_RUNNING" = true ]; then
        echo ""
        echo "Restarting CoreDNS service (was running before upgrade)..."
        systemctl restart coredns
        sleep 1
        if systemctl is-active --quiet coredns; then
            echo "✓ CoreDNS service restarted successfully"
        else
            echo "✗ Warning: CoreDNS service failed to start"
            echo "  Check status: sudo systemctl status coredns"
            echo "  Check logs: sudo journalctl -u coredns -n 20"
        fi
    else
        echo ""
        echo "CoreDNS service was not running before upgrade"
        echo "Service remains stopped (not automatically restarted)"
        echo "To start it when ready: sudo systemctl start coredns"
    fi
else
    # Fresh installation
    echo ""
    echo "================================"
    echo "Installation Complete!"
    echo "================================"
    echo ""
    echo "To start using CoreDNS:"
    echo ""
    echo "1. Configure CoreDNS (edit the Corefile):"
    echo "   sudo nano /etc/coredns/Corefile"
    echo ""
    echo "2. Example configurations are available:"
    echo "   cat /etc/coredns/proxy_only.example"
    echo "   cat /etc/coredns/proxy_zone.example"
    echo "   cat /etc/coredns/proxy_zone_conditional.example"
    echo ""
    echo "3. Enable and start the service:"
    echo "   sudo systemctl enable coredns"
    echo "   sudo systemctl start coredns"
    echo ""
    echo "4. Check service status:"
    echo "   sudo systemctl status coredns"
    echo ""
    echo "5. View logs:"
    echo "   sudo journalctl -u coredns -f"
    echo ""
    echo "Note: CoreDNS uses port 53. If systemd-resolved is running,"
    echo "you may need to disable its DNS stub listener:"
    echo "  sudo sed -i 's/#DNSStubListener=yes/DNSStubListener=no/' /etc/systemd/resolved.conf"
    echo "  sudo systemctl restart systemd-resolved"
    echo ""
fi

#DEBHELPER#
exit 0