#!/bin/bash
# coredns-zone - Utility for managing CoreDNS zone files
# 
# Usage:
#   coredns-zone init <zone-name>      Create a new zone file
#   coredns-zone bump <zone-name>      Increment zone serial number
#   coredns-zone list                  List all zone files
#   coredns-zone show <zone-name>      Display zone file
#   coredns-zone help                  Show this help

set -e

ZONES_DIR="/etc/coredns"

show_help() {
    grep "^# " "$0" | grep -v "^#!" | sed 's/^# *//'
}

init_zone() {
    local zone_name="$1"
    if [ -z "$zone_name" ]; then
        echo "Error: zone name required"
        echo "Usage: coredns-zone init <zone-name>"
        exit 1
    fi
    
    local zone_file="${ZONES_DIR}/${zone_name}.zone"
    
    if [ -f "$zone_file" ]; then
        echo "Error: Zone file already exists: $zone_file"
        exit 1
    fi
    
    # Create zone file with default SOA record
    cat > "$zone_file" << EOF
\$ORIGIN ${zone_name}.
@    3600 IN SOA ns1.${zone_name}. hostmaster.${zone_name}. (
                $(date +%Y%m%d)01 ; serial
                3600           ; refresh (1 hour)
                900            ; retry (15 minutes)
                604800         ; expire (1 week)
                3600           ; minimum (1 hour)
                )

     3600 IN NS  ns1.${zone_name}.
     3600 IN NS  ns2.${zone_name}.

ns1  IN A      192.168.1.10
ns2  IN A      192.168.1.11

@    IN A      192.168.1.1
www  IN A      192.168.1.100
mail IN A      192.168.1.50
EOF
    
    chown coredns:coredns "$zone_file"
    chmod 644 "$zone_file"
    
    echo "✓ Zone file created: $zone_file"
    echo "  Edit the file to add your DNS records"
    echo "  Then reload CoreDNS: sudo systemctl reload coredns"
}

bump_serial() {
    local zone_name="$1"
    if [ -z "$zone_name" ]; then
        echo "Error: zone name required"
        echo "Usage: coredns-zone bump <zone-name>"
        exit 1
    fi
    
    local zone_file="${ZONES_DIR}/${zone_name}.zone"
    
    if [ ! -f "$zone_file" ]; then
        echo "Error: Zone file not found: $zone_file"
        exit 1
    fi
    
    # Extract current serial
    local current_serial=$(grep -E "^\s+[0-9]+ ;" "$zone_file" | head -1 | awk '{print $1}')
    
    if [ -z "$current_serial" ]; then
        echo "Error: Could not find serial in zone file"
        exit 1
    fi
    
    # Calculate new serial (typically YYYYMMDDNN format)
    local new_serial=$((current_serial + 1))
    
    # Replace serial in zone file
    sed -i "s/^\s\+${current_serial} ;/                ${new_serial} ;/" "$zone_file"
    
    echo "✓ Serial bumped: $current_serial -> $new_serial"
    echo "  Reload CoreDNS to apply changes: sudo systemctl reload coredns"
}

list_zones() {
    if [ ! -d "$ZONES_DIR" ]; then
        echo "Zone directory not found: $ZONES_DIR"
        exit 1
    fi
    
    echo "Zone files in $ZONES_DIR:"
    ls -lh "${ZONES_DIR}"/*.zone 2>/dev/null || echo "  No zone files found"
}

show_zone() {
    local zone_name="$1"
    if [ -z "$zone_name" ]; then
        echo "Error: zone name required"
        echo "Usage: coredns-zone show <zone-name>"
        exit 1
    fi
    
    local zone_file="${ZONES_DIR}/${zone_name}.zone"
    
    if [ ! -f "$zone_file" ]; then
        echo "Error: Zone file not found: $zone_file"
        exit 1
    fi
    
    cat "$zone_file"
}

# Main script
case "${1:-help}" in
    init)
        init_zone "$2"
        ;;
    bump)
        bump_serial "$2"
        ;;
    list)
        list_zones
        ;;
    show)
        show_zone "$2"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "Unknown command: $1"
        show_help
        exit 1
        ;;
esac